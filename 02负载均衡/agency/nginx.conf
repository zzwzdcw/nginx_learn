# 负载均衡的代理服务器配置
# /etc/nginx/nginx.conf

user root;

# 根据CPU核心的数量自动设置工人流程数。
worker_processes auto;

# 允许对正则表达式使用JIT来加速它们的处理。  
pcre_jit on;

# 配置默认错误日志记录器。
error_log /var/log/nginx/error.log warn;

# 包含用于加载动态模块的指令的文件。  
include /etc/nginx/modules/*.conf;

# 取消注释以将包含配置片段的文件包含到根上下文中。  
# 注意:这将在Alpine 3.15默认启用。  
#include /etc/nginx/conf.d/*.conf;

events {
        # 一个工作进程可以同时打开的最大连接数。  
        worker_connections 1024;
}

http {
        # 包含文件扩展名到响应的MIME类型的映射，并定义默认类型。  
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # 名称服务器，用于将上游服务器的名称解析为地址。 在Lua模块中使用tcpsocket和udpsocket时也需要它。  
        #resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;

        # 不要告诉客户端nginx的版本号。 默认设置是“on”。  
        server_tokens off;

        # 指定客户端请求的最大可接受的正文大小，由请求头Content-Length表示。 如果指定的内容长度大于这个大小，那么客户端将收到HTTP错误码413。
        # 设置为0表示禁用。 默认是  '1m'.
        client_max_body_size 1m;

        # Sendfile从内核中在一个FD和另一个FD之间复制数据，这比read() + write()更有效。 默认是 off  
        sendfile on;

        # 导致nginx尝试在一个包中发送其HTTP响应头，而不是使用部分帧   Default is 'off'.
        tcp_nopush on;


        # 启用指定的协议 Default is TLSv1 TLSv1.1 TLSv1.2.
        # TIP: 如果你没有义务支持老客户，那就撤掉   remove TLSv1.1.
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

        # Path of the file with Diffie-Hellman parameters for EDH ciphers.
        # TIP: Generate with: `openssl dhparam -out /etc/ssl/nginx/dh2048.pem 2048`
        #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

        # 指定我们的密码套装应该优先于客户端密码。  
        # Default is 'off'.
        ssl_prefer_server_ciphers on;

        # 启用一个共享SSL缓存，其大小可以容纳大约8000个会话。  
        # Default is 'none'.
        ssl_session_cache shared:SSL:2m;

        # 指定客户端可以重用会话参数的时间。  
        # Default is '5m'.
        ssl_session_timeout 1h;

        # 禁用TLS会话(它们是不安全的)  
        # Disable TLS session tickets (they are insecure). Default is 'on'.
        ssl_session_tickets off;


        # 启用响应的gzip压缩。
        #gzip on;

        # Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
        gzip_vary on;


        # 代理websockets的助手变量。
        map $http_upgrade $connection_upgrade {
                default upgrade;
                '' close;
        }


        # 指定日志的主格式。
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        # 设置缓冲区日志写入的路径、格式和配置。  
        access_log /var/log/nginx/access.log main;


        # Includes virtual hosts configs.
        include /etc/nginx/http.d/*.conf;

        #负载均衡 1 轮询:
#        upstream web{
#            server web0;
#            server web1;
#            server web2;
#        }

        #负载均衡 2 weight：
        upstream web{
            server web0 weight=10;
            server web1 weight=5;
            server web2 weight=5;
        }

        server{
            listen 80;
            server_name localhost;

            location / {
                proxy_pass http://web/;     #设定代理服务器的协议和地址 
            }
        }
        
        server{
            listen 80;
            server_name web;

            location / {
                proxy_pass http://web/;     #设定代理服务器的协议和地址 
            }   
        }
        
}

# TIP: 如果使用流模块，取消注释。
#include /etc/nginx/stream.conf;